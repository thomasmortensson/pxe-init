// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	entities "github.com/thomasmortensson/pxe-init/internal/domain/entities"
)

// Datastore is an autogenerated mock type for the Datastore type
type Datastore struct {
	mock.Mock
}

// FindMachineByMAC provides a mock function with given fields: mac
func (_m *Datastore) FindMachineByMAC(mac string) (*entities.Machine, error) {
	ret := _m.Called(mac)

	var r0 *entities.Machine
	if rf, ok := ret.Get(0).(func(string) *entities.Machine); ok {
		r0 = rf(mac)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.Machine)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(mac)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindMachineImageByMAC provides a mock function with given fields: mac
func (_m *Datastore) FindMachineImageByMAC(mac string) (*entities.Image, error) {
	ret := _m.Called(mac)

	var r0 *entities.Image
	if rf, ok := ret.Get(0).(func(string) *entities.Image); ok {
		r0 = rf(mac)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.Image)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(mac)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetImageByName provides a mock function with given fields: name
func (_m *Datastore) GetImageByName(name string) (*entities.Image, error) {
	ret := _m.Called(name)

	var r0 *entities.Image
	if rf, ok := ret.Get(0).(func(string) *entities.Image); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.Image)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsNotFound provides a mock function with given fields: err
func (_m *Datastore) IsNotFound(err error) bool {
	ret := _m.Called(err)

	var r0 bool
	if rf, ok := ret.Get(0).(func(error) bool); ok {
		r0 = rf(err)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// ListImages provides a mock function with given fields:
func (_m *Datastore) ListImages() ([]*entities.Image, error) {
	ret := _m.Called()

	var r0 []*entities.Image
	if rf, ok := ret.Get(0).(func() []*entities.Image); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entities.Image)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
